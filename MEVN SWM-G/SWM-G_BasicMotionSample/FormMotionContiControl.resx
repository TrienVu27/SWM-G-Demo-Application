<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerMonitor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H+4AAAAASUVORK5CYII=
</value>
  </data>
</root>